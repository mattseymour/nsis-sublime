%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
file_extensions:
  - nsi
  - nsh
scope: source.example-c
contexts:
  main:
    # Strings begin and end with quotes, and use backslashes as an escape
    # character
    - match: '"'
      scope: punctuation.definition.string.begin
      push: double_quoted_string
    - match: '`'
      scope: punctuation.definition.string.begin
      push: double_quoted_string

    # Comments begin with a '//' and finish at the end of the line
    - match: '//'
      scope: punctuation.definition.comment
      push: line_comment

    - match: '(!insertmacro|!define|!ifndef|!include|!ifdef|!endif|!else|!addincludedir)'
      scope: keyword.control
    - match: '\b(Pop|Push|StrCpy|StrLen|Goto)\b'
      scope: keyword.control

    - match: '\b(-)?[0-9.]+\b'
      scope: constant.numeric

    - match: '(\b(Function|FunctionEnd|Section|SectionEnd)\b|!macroend|!macro)'
      scope: storage.type

    - match: '(\$\{\w+\}|\$\w+)'
      scope: variable.language

    - match: '\b(var|Var)\b'
      scope: variable.language

    - match: '(;|#)'
      scope: comment.line
      push: line_comment

    - match: '\b(Name|BrandingText|InstallDirRegKey|InstallDir|CRCCheck|XPStyle|ShowInstDetails|ShowUninstDetails|VIProductVersion|VIAddVersionKey|RequestExecutionLevel)\b'
      scope: support.constant

  double_quoted_string:
    - meta_scope: string.quoted.double.example-c
    - match: '\\.'
      scope: constant.character.escape.example-c
    - match: '"'
      scope: punctuation.definition.string.end.example-c
      pop: true
    - match: '`'
      scope: punctuation.definition.string.end.example-c
      pop: true

  line_comment:
    - meta_scope: comment.line.example-c
    - match: $
      pop: true
